generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
  roleId    String?
  role      Role?    @relation(fields: [roleId], references: [id], onDelete: Cascade)
}

model Role {
  id        String   @id @default(cuid())
  name      String   @unique
  editable  Boolean  @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())

  permissions Permission[] @relation(name: "RolePermissions")
  User        User[]
}

model Permission {
  id   String @id @default(cuid())
  name String @unique

  roles Role[] @relation(name: "RolePermissions")
}

model Category {
  id        String   @default(cuid())
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  name      String
  language  String   @default("en-US")

  articles Article[]

  @@id([id, language])
  @@map("categories")
}

enum ArticleStatus {
  DRAFT
  UNDER_REVIEW
  UNPUBLISHED
  PUBLISHED
  DELETED
}

model Article {
  id           String        @default(cuid())
  title        String
  content      String        @db.LongText
  description  String        @db.Text
  status       ArticleStatus @default(DRAFT)
  createdAt    DateTime      @default(now()) @map("created_at")
  updatedAt    DateTime      @updatedAt @map("updated_at")
  language     String        @default("en-US")
  categoryId   String?
  categoryLang String?

  category Category? @relation(fields: [categoryId, categoryLang], references: [id, language])

  @@id([id, language])
  @@unique([title, language])
}
